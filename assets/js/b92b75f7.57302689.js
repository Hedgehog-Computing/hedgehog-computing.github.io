"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2109],{9555:function(e){e.exports=JSON.parse('{"pluginId":"Hedgehog-Script","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/Hedgehog-Script/intro-hedgehog-script","docId":"intro-hedgehog-script"},{"type":"category","label":"Expressions & Operators","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Variables","href":"/Hedgehog-Script/Expressions & Operators/Variables","docId":"Expressions & Operators/Variables"},{"type":"link","label":"this","href":"/Hedgehog-Script/Expressions & Operators/this","docId":"Expressions & Operators/this"},{"type":"link","label":"null","href":"/Hedgehog-Script/Expressions & Operators/Null","docId":"Expressions & Operators/Null"},{"type":"link","label":"Regular Expressions","href":"/Hedgehog-Script/Expressions & Operators/Regular Expression","docId":"Expressions & Operators/Regular Expression"},{"type":"link","label":"Expressions & Operators","href":"/Hedgehog-Script/Expressions & Operators/Expressions & Operators","docId":"Expressions & Operators/Expressions & Operators"}]},{"type":"category","label":"Statements and Declarations","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Declarations","href":"/Hedgehog-Script/Statements and Declarations/Declarations","docId":"Statements and Declarations/Declarations"},{"type":"link","label":"Conditional Statements","href":"/Hedgehog-Script/Statements and Declarations/Conditional Statements","docId":"Statements and Declarations/Conditional Statements"},{"type":"link","label":"Loop Statements","href":"/Hedgehog-Script/Statements and Declarations/Loop Statements","docId":"Statements and Declarations/Loop Statements"},{"type":"link","label":"Exception Handling","href":"/Hedgehog-Script/Statements and Declarations/Exception Handling","docId":"Statements and Declarations/Exception Handling"}]},{"type":"category","label":"Built-In Objects","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Basic Types","href":"/Hedgehog-Script/Built-In Objects/Basic Types","docId":"Built-In Objects/Basic Types"},{"type":"link","label":"Array","href":"/Hedgehog-Script/Built-In Objects/Array","docId":"Built-In Objects/Array"},{"type":"link","label":"Output","href":"/Hedgehog-Script/Built-In Objects/Output","docId":"Built-In Objects/Output"},{"type":"link","label":"string","href":"/Hedgehog-Script/Built-In Objects/String","docId":"Built-In Objects/String"},{"type":"link","label":"NaN","href":"/Hedgehog-Script/Built-In Objects/NaN","docId":"Built-In Objects/NaN"},{"type":"link","label":"Set","href":"/Hedgehog-Script/Built-In Objects/Set","docId":"Built-In Objects/Set"},{"type":"link","label":"Map","href":"/Hedgehog-Script/Built-In Objects/Maps","docId":"Built-In Objects/Maps"},{"type":"link","label":"object","href":"/Hedgehog-Script/Built-In Objects/Object","docId":"Built-In Objects/Object"},{"type":"link","label":"JSON","href":"/Hedgehog-Script/Built-In Objects/JSON","docId":"Built-In Objects/JSON"},{"type":"link","label":"Mat","href":"/Hedgehog-Script/Built-In Objects/Mat","docId":"Built-In Objects/Mat"}]},{"type":"category","label":"Matrix and Tensor","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Matrix","href":"/Hedgehog-Script/Matrix and Tensor/Matrix","docId":"Matrix and Tensor/Matrix"},{"type":"link","label":"Tensor","href":"/Hedgehog-Script/Matrix and Tensor/Tensor","docId":"Matrix and Tensor/Tensor"}]},{"type":"category","label":"Functions","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"`arguments` object","href":"/Hedgehog-Script/Functions/Arguments Object","docId":"Functions/Arguments Object"},{"type":"link","label":"Parameters","href":"/Hedgehog-Script/Functions/Parameters","docId":"Functions/Parameters"},{"type":"link","label":"Method Definitions","href":"/Hedgehog-Script/Functions/Method definitions","docId":"Functions/Method definitions"},{"type":"link","label":"Arrow Functions","href":"/Hedgehog-Script/Functions/Arrow Functions","docId":"Functions/Arrow Functions"},{"type":"link","label":"Functions","href":"/Hedgehog-Script/Functions/Functions","docId":"Functions/Functions"}]},{"type":"category","label":"Classes","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Constructors","href":"/Hedgehog-Script/Classes/Constructors","docId":"Classes/Constructors"},{"type":"link","label":"Public Class Fields","href":"/Hedgehog-Script/Classes/Public Class Fields","docId":"Classes/Public Class Fields"},{"type":"link","label":"Private Class Features","href":"/Hedgehog-Script/Classes/Private Class Features","docId":"Classes/Private Class Features"},{"type":"link","label":"Classes","href":"/Hedgehog-Script/Classes/Classes","docId":"Classes/Classes"}]}]},"docs":{"Built-In Objects/Array":{"id":"Built-In Objects/Array","title":"Array","description":"The Array in Hedgehog Script is very useful for storing and managing data.","sidebar":"tutorialSidebar"},"Built-In Objects/Basic Types":{"id":"Built-In Objects/Basic Types","title":"Basic Types","description":"Hedgehog Script has several basic built-in types. These are the complement to constructed types.","sidebar":"tutorialSidebar"},"Built-In Objects/JSON":{"id":"Built-In Objects/JSON","title":"JSON","description":"JSON is an object with methods for parsing and converting.","sidebar":"tutorialSidebar"},"Built-In Objects/Maps":{"id":"Built-In Objects/Maps","title":"Map","description":"The Map object holds key-value pairs and follows insertion order.","sidebar":"tutorialSidebar"},"Built-In Objects/Mat":{"id":"Built-In Objects/Mat","title":"Mat","description":"The Mat object is very useful for matrix-like operations in Hedgehog Script.","sidebar":"tutorialSidebar"},"Built-In Objects/NaN":{"id":"Built-In Objects/NaN","title":"NaN","description":"NaN means Not-A-Number. Let\'s see examples of NaN:","sidebar":"tutorialSidebar"},"Built-In Objects/Object":{"id":"Built-In Objects/Object","title":"object","description":"object is a type just like string is a type.","sidebar":"tutorialSidebar"},"Built-In Objects/Output":{"id":"Built-In Objects/Output","title":"Output","description":"Output is crucial to any programming language. They define how a user can access information.","sidebar":"tutorialSidebar"},"Built-In Objects/Set":{"id":"Built-In Objects/Set","title":"Set","description":"A Set is an object available as a data structure.","sidebar":"tutorialSidebar"},"Built-In Objects/String":{"id":"Built-In Objects/String","title":"string","description":"string is a type used for textual data such as \'Hello World!\'","sidebar":"tutorialSidebar"},"Classes/Classes":{"id":"Classes/Classes","title":"Classes","description":"Before reading this please note that classes are in an experimental stage in Hedgehog Script and don\'t support certain things.","sidebar":"tutorialSidebar"},"Classes/Constructors":{"id":"Classes/Constructors","title":"Constructors","description":"The constructor method is a special, unique method of a class to initialize an instance of that class.","sidebar":"tutorialSidebar"},"Classes/Private Class Features":{"id":"Classes/Private Class Features","title":"Private Class Features","description":"Private class members (methods and properties) are ones such that only the functions/class itself can access them.","sidebar":"tutorialSidebar"},"Classes/Public Class Fields":{"id":"Classes/Public Class Fields","title":"Public Class Fields","description":"The terms public and private pertain to classes in how their class members (properties, methods) are available","sidebar":"tutorialSidebar"},"Expressions & Operators/Expressions & Operators":{"id":"Expressions & Operators/Expressions & Operators","title":"Expressions & Operators","description":"There are infinitely many operators and expressions one can create and use.","sidebar":"tutorialSidebar"},"Expressions & Operators/Null":{"id":"Expressions & Operators/Null","title":"null","description":"null is a primitive type meaning \'non-existent\'.","sidebar":"tutorialSidebar"},"Expressions & Operators/Regular Expression":{"id":"Expressions & Operators/Regular Expression","title":"Regular Expressions","description":"RegExp is a powerful object that matches text to a pattern.","sidebar":"tutorialSidebar"},"Expressions & Operators/this":{"id":"Expressions & Operators/this","title":"this","description":"The keyword this belongs to functions, (or when used alone, the global object).","sidebar":"tutorialSidebar"},"Expressions & Operators/Variables":{"id":"Expressions & Operators/Variables","title":"Variables","description":"One can define variable and constant in this way:","sidebar":"tutorialSidebar"},"Functions/Arguments Object":{"id":"Functions/Arguments Object","title":"`arguments` object","description":"In functions, there are values that are passed in called arguments.","sidebar":"tutorialSidebar"},"Functions/Arrow Functions":{"id":"Functions/Arrow Functions","title":"Arrow Functions","description":"Arrow functions are a different way to write functions - they are more compact, but slightly more limited.","sidebar":"tutorialSidebar"},"Functions/Functions":{"id":"Functions/Functions","title":"Functions","description":"- A function is effectively a set of statements that performs a task or calculates a value.","sidebar":"tutorialSidebar"},"Functions/Method definitions":{"id":"Functions/Method definitions","title":"Method Definitions","description":"Method definitions have a shorter syntax for defining a function method.","sidebar":"tutorialSidebar"},"Functions/Parameters":{"id":"Functions/Parameters","title":"Parameters","description":"Parameters are named variables, passed into a function, and are used to import the arguments into functions.","sidebar":"tutorialSidebar"},"intro-hedgehog-script":{"id":"intro-hedgehog-script","title":"Introduction","description":"Overview","sidebar":"tutorialSidebar"},"Matrix and Tensor/Matrix":{"id":"Matrix and Tensor/Matrix","title":"Matrix","description":"As a scientific programming language, all the usual matrix operations are supported by Hedgehog Script. The matrix is a two-dimensional array of numbers. The matrix is created by the mat() function or Mat() class constructor.","sidebar":"tutorialSidebar"},"Matrix and Tensor/Tensor":{"id":"Matrix and Tensor/Tensor","title":"Tensor","description":"Tensor is a multi-dimensional array with a uniform type. In Hedgehog Lab, tensor is only used to store data. There are not any operations on tensor supported in Hedgehog Lab.","sidebar":"tutorialSidebar"},"Statements and Declarations/Conditional Statements":{"id":"Statements and Declarations/Conditional Statements","title":"Conditional Statements","description":"Control flow is about the order of execution.","sidebar":"tutorialSidebar"},"Statements and Declarations/Declarations":{"id":"Statements and Declarations/Declarations","title":"Declarations","description":"A declaration is a formal or explicit announcement of an identifier\'s meaning.","sidebar":"tutorialSidebar"},"Statements and Declarations/Exception Handling":{"id":"Statements and Declarations/Exception Handling","title":"Exception Handling","description":"When errors can occur, it is good practice to handle them to either change the program or debug.","sidebar":"tutorialSidebar"},"Statements and Declarations/Loop Statements":{"id":"Statements and Declarations/Loop Statements","title":"Loop Statements","description":"When needing to do a task multiple times, it\'s common to use a loop statement.","sidebar":"tutorialSidebar"}}}')}}]);