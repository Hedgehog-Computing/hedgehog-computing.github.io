"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8105],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return h}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=c(n),h=a,f=m["".concat(p,".").concat(h)]||m[h]||l[h]||o;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},799:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return p},default:function(){return h},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return l}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],s={},p=void 0,c={unversionedId:"Properties/shape",id:"Properties/shape",title:"shape",description:"shape(matrix any[]",source:"@site/math/Properties/shape.mdx",sourceDirName:"Properties",slug:"/Properties/shape",permalink:"/math/Properties/shape",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ndim",permalink:"/math/Properties/ndim"},next:{title:"trace",permalink:"/math/Properties/trace"}},u={},l=[{value:"<code>shape(matrix: any[] | Mat | Tensor) : any[]</code>",id:"shapematrix-any--mat--tensor--any",level:4}],m={toc:l};function h(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h4",{id:"shapematrix-any--mat--tensor--any"},(0,o.kt)("inlineCode",{parentName:"h4"},"shape(matrix: any[] | Mat | Tensor) : any[]")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"param")," ",(0,o.kt)("inlineCode",{parentName:"p"},"matrix")," - The construct you want to find the shape of, should be an ",(0,o.kt)("inlineCode",{parentName:"p"},"Array"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"Mat")," or `Tensor."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"returns:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"any[]")," - A row vector specifying the shape. And in the row vector, the numbers in each index represent the length of each dimension. For example a return value of ","[3,4]"," means the shape of the construct was a 3x4 matrix. A return value of ","[10]"," means it has 1 dimension of size 10. That is a list with 10 elements."),(0,o.kt)("p",null,"This function gives us the ",(0,o.kt)("inlineCode",{parentName:"p"},"shape")," of various constructs whatever dimensions they have. The shape is a row vector that informs us of the lengths of each dimension of said construct. Another example is if it was a tensor with 5 dimensions, where dimension 1 had 3 rows, dimension 2 had 4 columns, dimension 3 had height 3, dimension 4 had length 2, and dimension 5 had length 4, we would have a shape of ","[3,4,3,2,4]","."),(0,o.kt)("iframe",{src:"https://hlab.app/s/docs/hbook_shape",width:"100%",height:"500px"}))}h.isMDXComponent=!0}}]);