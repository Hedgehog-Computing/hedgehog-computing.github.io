"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6662],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return f}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),c=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=c(e.components);return r.createElement(p.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=c(t),f=a,d=u["".concat(p,".").concat(f)]||u[f]||m[f]||o;return t?r.createElement(d,i(i({ref:n},l),{},{components:t})):r.createElement(d,i({ref:n},l))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=u;var s={};for(var p in n)hasOwnProperty.call(n,p)&&(s[p]=n[p]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},7149:function(e,n,t){t.r(n),t.d(n,{assets:function(){return l},contentTitle:function(){return p},default:function(){return f},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return m}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),i=["components"],s={},p=void 0,c={unversionedId:"Transformations and creations/reshape",id:"Transformations and creations/reshape",title:"reshape",description:"",source:"@site/math/Transformations and creations/reshape.mdx",sourceDirName:"Transformations and creations",slug:"/Transformations and creations/reshape",permalink:"/math/Transformations and creations/reshape",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"pascal",permalink:"/math/Transformations and creations/pascal"},next:{title:"resize",permalink:"/math/Transformations and creations/resize"}},l={},m=[{value:"<code>reshape(matrix: any[] | Mat | Tensor, sizes: any[]) : any[] | Mat | Tensor</code>",id:"reshapematrix-any--mat--tensor-sizes-any--any--mat--tensor",level:4}],u={toc:m};function f(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h4",{id:"reshapematrix-any--mat--tensor-sizes-any--any--mat--tensor"},(0,o.kt)("inlineCode",{parentName:"h4"},"reshape(matrix: any[] | Mat | Tensor, sizes: any[]) : any[] | Mat | Tensor")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"param")," ",(0,o.kt)("inlineCode",{parentName:"p"},"matrix")," - an ",(0,o.kt)("inlineCode",{parentName:"p"},"Array"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"Mat")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"Tensor")," - the construct to reshape according to ",(0,o.kt)("inlineCode",{parentName:"p"},"sizes"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"param")," ",(0,o.kt)("inlineCode",{parentName:"p"},"sizes")," a 1-D ",(0,o.kt)("inlineCode",{parentName:"p"},"Array")," (list) representing the size - dimension-wise."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"returns")," - ",(0,o.kt)("inlineCode",{parentName:"p"},"any[] | Mat | Tensor")," - an ",(0,o.kt)("inlineCode",{parentName:"p"},"Array"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"Mat")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"Tensor")," reshaped with the corresponding size given in ",(0,o.kt)("inlineCode",{parentName:"p"},"sizes")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"size")," should be something like ",(0,o.kt)("inlineCode",{parentName:"p"},"[2, 2, 2]")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"[2, -1]"),". In the latter case, -1 means automatically matching."),(0,o.kt)("iframe",{src:"https://hlab.app/s/LinJianan/reshape_book",width:"100%",height:"500px"}))}f.isMDXComponent=!0}}]);