"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2783],{3905:function(e,n,t){t.d(n,{Zo:function(){return m},kt:function(){return d}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=r.createContext({}),u=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},m=function(e){var n=u(e.components);return r.createElement(p.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},l=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),l=u(t),d=i,f=l["".concat(p,".").concat(d)]||l[d]||c[d]||o;return t?r.createElement(f,a(a({ref:n},m),{},{components:t})):r.createElement(f,a({ref:n},m))}));function d(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=l;var s={};for(var p in n)hasOwnProperty.call(n,p)&&(s[p]=n[p]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var u=2;u<o;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}l.displayName="MDXCreateElement"},9310:function(e,n,t){t.r(n),t.d(n,{assets:function(){return m},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return c}});var r=t(7462),i=t(3366),o=(t(7294),t(3905)),a=["components"],s={},p=void 0,u={unversionedId:"Properties/ndim",id:"Properties/ndim",title:"ndim",description:"ndim(dataIn number",source:"@site/math/Properties/ndim.mdx",sourceDirName:"Properties",slug:"/Properties/ndim",permalink:"/math/Properties/ndim",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"is_triu",permalink:"/math/Properties/is_triu"},next:{title:"shape",permalink:"/math/Properties/shape"}},m={},c=[{value:"<code>ndim(dataIn: any[] | Mat | Tensor | number) : number</code>",id:"ndimdatain-any--mat--tensor--number--number",level:4}],l={toc:c};function d(e){var n=e.components,t=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h4",{id:"ndimdatain-any--mat--tensor--number--number"},(0,o.kt)("inlineCode",{parentName:"h4"},"ndim(dataIn: any[] | Mat | Tensor | number) : number")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"param")," ",(0,o.kt)("inlineCode",{parentName:"p"},"dataIn")," - an ",(0,o.kt)("inlineCode",{parentName:"p"},"Array"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"Mat")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"Tensor")," or even a ",(0,o.kt)("inlineCode",{parentName:"p"},"number"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"returns:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"number")," - Representing the dimension of the structure. "),(0,o.kt)("p",null,"This function is quite useful as it can handle different cases when size matters. It determines the number of dimensions of a structure. For example, a vector is 1 dimensional. A 2-D array is 2 dimensional. A 3-D ",(0,o.kt)("inlineCode",{parentName:"p"},"Array")," or 3-D ",(0,o.kt)("inlineCode",{parentName:"p"},"Tensor")," has 3 dimensions and so on. A ",(0,o.kt)("inlineCode",{parentName:"p"},"number")," has 0 dimensions."),(0,o.kt)("p",null,"Note that this is returning the ",(0,o.kt)("strong",{parentName:"p"},"number")," of dimensions, not the dimensions themselves. So for a matrix of size 3x4, it has 2 dimensions - rows and columns. Thus ",(0,o.kt)("inlineCode",{parentName:"p"},"ndim=2"),", the size of 3x4 doesn't matter in this function."),(0,o.kt)("iframe",{src:"https://hlab.app/s/docs/ndim_hbook",width:"100%",height:"500px"}))}d.isMDXComponent=!0}}]);